/**
 * angular-permission-ui
 * Extension module of angular-permission for access control within ui-router
 * @version v5.3.2 - 2018-02-27
 * @link https://github.com/Narzerus/angular-permission
 * @author Rafael Vidaurre <narzerus@gmail.com> (http://www.rafaelvidaurre.com), Blazej Krysiak <blazej.krysiak@gmail.com>
 * @license MIT License, http://www.opensource.org/licenses/MIT
 */


!function(a,angular,b){"use strict";function c(a){"ngInject";a.decorator("$delegate",function(a){return a.self.$$permissionState=function(){return a},a})}function d(a,b,c,d,e,f,g){"ngInject";function h(a){function b(a){d.toState=a.to(),d.toParams=a.params("to"),d.fromState=a.from(),d.fromParams=a.params("from"),d.options=a.options()}b(a);var c=new g(d.toState);return f.authorizeByPermissionMap(c)["catch"](function(b){return c.resolveRedirectState(b).then(function(b){return a.router.stateService.target(b.state,b.params,b.options)})})}function i(a,b,h,i,j,k){function l(){d.toState=b,d.toParams=h,d.fromState=i,d.fromParams=j,d.options=k}function m(a){angular.extend(b,{$$isAuthorizationFinished:a})}function n(){return b.$$isAuthorizationFinished}function o(){e.broadcastPermissionAcceptedEvent();var a=angular.extend({},d.options,{notify:!1,location:!0});c.go(d.toState.name,d.toParams,a).then(function(){e.broadcastStateChangeSuccessEvent()})}function p(a,b){e.broadcastPermissionDeniedEvent(),b.resolveRedirectState(a).then(function(a){c.go(a.state,a.params,a.options)})}if(!n())if(m(!0),l(),e.areEventsDefaultPrevented())m(!1);else{e.broadcastPermissionStartEvent(),a.preventDefault();var q=new g(d.toState);f.authorizeByPermissionMap(q).then(function(){o()})["catch"](function(a){p(a,q)})["finally"](function(){m(!1)})}}if(a.has("$transitions")){var j=a.get("$transitions");j.onBefore({},h)}else b.$on("$stateChangeStart",function(a,b,c,d,e,f){i(a,b,c,d,e,f)})}function e(a,b,c,d){"ngInject";function e(){return j()||k()}function f(){b.$broadcast(d.permissionStart,c.toState,c.toParams,c.options)}function g(){b.$broadcast(d.permissionAccepted,c.toState,c.toParams,c.options)}function h(){b.$broadcast(d.permissionDenies,c.toState,c.toParams,c.options)}function i(){b.$broadcast("$stateChangeSuccess",c.toState,c.toParams,c.fromState,c.fromParams)}function j(){return b.$broadcast(d.permissionStart,c.toState,c.toParams,c.options).defaultPrevented}function k(){return b.$broadcast("$stateChangeStart",c.toState,c.toParams,c.fromState,c.fromParams,c.options).defaultPrevented}return a.areEventsDefaultPrevented=e,a.broadcastStateChangeSuccessEvent=i,a.broadcastPermissionStartEvent=f,a.broadcastPermissionAcceptedEvent=g,a.broadcastPermissionDeniedEvent=h,a}function f(a,b,c){"ngInject";function d(a,b){return f(a,b)}function e(a,e){var f=b.get(a),g=new c(f,e);return d(g,e)}function f(b,c){var d=a.defer();return g(d,b,c),d.promise}function g(b,c,d){var e=i(c.except,c,d);a.all(j(e)).then(function(){h(b,c,d)})["catch"](function(a){angular.isArray(a)||(a=[a]),b.reject(a[0])})}function h(b,c,d){if(!c.only.length)return void b.resolve();var e=i(c.only,c,d);a.all(e).then(function(a){b.resolve(a)})["catch"](function(a){b.reject(a)})}function i(b,c,d){return b.length?b.map(function(b){var e=c.resolvePropertyValidity(b,d);return a.any(e).then(function(a){return angular.isArray(a)?a[0]:a})}):[a.reject()]}function j(b){return b.map(function(b){var c=a.defer();return b.then(c.reject,c.resolve),c.promise})}this.authorizeByPermissionMap=d,this.authorizeByStateName=e}function g(a){"ngInject";function b(b){var d=b.$$permissionState(),e=d.path;angular.forEach(e,function(b){if(c(b)){var d=new a(b.data.permissions);this.extendPermissionMap(d)}},this)}function c(a){try{return Object.prototype.hasOwnProperty.call(a.data,"permissions")}catch(b){return!1}}return b.prototype=new a,b.prototype.extendPermissionMap=function(a){a.only.length&&(this.only=this.only.concat([a.only])),a.except.length&&(this.except=this.except.concat([a.except])),angular.isDefined(a.redirectTo)&&(this.redirectTo=angular.extend({},this.redirectTo,a.redirectTo))},b}c.$inject=["$stateProvider"],d.$inject=["$injector","$rootScope","$state","PermTransitionProperties","PermTransitionEvents","PermStateAuthorization","PermStatePermissionMap"],e.$inject=["$delegate","$rootScope","PermTransitionProperties","PermTransitionEventNames"],f.$inject=["$q","$state","PermStatePermissionMap"],g.$inject=["PermPermissionMap"];var h=angular.module("permission.ui",["permission","ui.router"]).config(c).run(d);"undefined"!=typeof module&&"undefined"!=typeof exports&&module.exports===exports&&(module.exports=h.name),angular.module("permission.ui").decorator("PermTransitionEvents",e);var i={permissionStart:"$stateChangePermissionStart",permissionAccepted:"$stateChangePermissionAccepted",permissionDenies:"$stateChangePermissionDenied"};angular.module("permission.ui").value("PermTransitionEventNames",i),angular.module("permission").service("PermStateAuthorization",f),angular.module("permission.ui").factory("PermStatePermissionMap",g)}(window,window.angular);
//# sourceMappingURL=angular-permission-ui.min.js.map